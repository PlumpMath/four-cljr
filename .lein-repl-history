(contains? '(1 2 3 4) 4)
(doc contains?)
bye
(new StringTokenizer "Have a nice day.")
(new java.util.StringTokenizer "Have a nice day.")
(clojure.string/split "Have a nice day.")
(clojure.string/split "Have a nice day." #"\ ")
(doc sort)
(sort (clojure.string/split "Have a nice Day."))
(sort (clojure.string/split "Have a nice Day." #"\ "))
(doc sort)
(sort (map .toLowercase (clojure.string/split "Have a nice Day." #"\ ")))
(sort (clojure.string/split "Have a nice day." #"\ "))
(sort ["Have" "a" "nice" "day."])
(sort-by str/upper-case ["Have" "a" "nice" "day."])
(sort-by clojure.string/upper-case ["Have" "a" "nice" "day."])
(doc replace)
(clojure.string/replace "Have a nice Day." #".")
(clojure.string/replace "Have a nice Day." #"." "$1")
(doc clojure.string/replace)
(clojure.string/replace "Have a nice Day." #"." "")
(clojure.string/replace "Day." #"." "$1")
(clojure.string/replace "Day." #"." "$2")
(clojure.string/replace "Day." #"\." "$2")
(clojure.string/replace "Day." #"\." "\\$1")
(clojure.string/replace "Day." #"\." "")
(clojure.string/replace "Have a nice Day." #"\." "")
(clojure.string/replace "Have a nice Day." #"\.\!" "")
(clojure.string/replace "Have a nice Day." #"\.|\!" "")
(clojure.string/replace "Have a nice! Day." #"\.|\!" "")
(sort (clojure.string/split "Have a nice Day." #"\ "))
(bye
)
(into [] {:a [1] :b [2]})
